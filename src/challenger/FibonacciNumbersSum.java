package challenger;

import java.math.BigInteger;

//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//       2        8          34
// 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

public class FibonacciNumbersSum {

    public static void main(String[] args) {
        System.out.println(Fibonacci.sumFibonacciNumbers(4000000));
    }

    private static class Fibonacci{

        private static long sumFibonacciNumbers(int n){
            BigInteger total = BigInteger.valueOf(2);
            int a = 1;
            int b = 1;
            int c = a + b;
            int sum = 0;
            while (c < n){
                System.out.println(a + "  " + b + "  "+ c);
                sum = sum + c;

                a = b + c;
                b = c + a;
                c = a + b;

            }
            return sum;
        }

    }

}
